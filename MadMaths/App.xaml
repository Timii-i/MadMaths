<Application x:Class="MadMaths.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MadMaths"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="{x:Type Page}">
            <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="5" Direction="315" Color="Gray" Opacity="0.20" BlurRadius="10.5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Foreground" Value="Beige"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="5" Direction="315" Color="Gray" Opacity="0.20" BlurRadius="10.5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="Beige"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="5" Direction="315" Color="Gray" Opacity="0.20" BlurRadius="10.5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style für die Buttons -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="28"/>
            <!--<Setter Property="Control.FontFamily" Value="Arial Rounded MT"/>-->
            <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="MinHeight" Value="70"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Foreground" Value="Beige"/>
            <Setter Property="Control.Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="6" Direction="315" Color="Gray" Opacity="0.35" BlurRadius="10.5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <!--überschreibe das Standard ControlTemplate, um MouseOver Effekt nutzen zu können-->
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FF212121" BorderThickness="0" CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                              TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="Grayscale"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Background">
                <!-- Standard Background -->
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,2">
                        <GradientStop Offset="0.0" Color="Orange"/>
                        <GradientStop Offset="0.5" Color="DarkOrange"/>
                        <GradientStop Offset="1.0" Color="OrangeRed"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hover Effekt -->
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter Property="Control.Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,4">
                                <GradientStop Offset="0.0" Color="#ff7600"/>
                                <GradientStop Offset="0.5"  Color="#ff7600"/>
                                <GradientStop Offset="1.0" Color="#ff7600"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Background" Value="#FFFF4B00"/>
                </Trigger>
            </Style.Triggers>
        </Style>
         <!-- Style für den MainBackground -->
        <Style TargetType="{x:Type Grid}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="#FF01C8FF" Offset="0.0"/>
                        <GradientStop Color="#FF648CFF" Offset="1.0"/>
                        <!--<GradientStop Color="#FF6464FF" Offset="1.0"/>-->
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter> 
        </Style>
        <!-- Alternativer Style für Buttons -->
        <Style x:Key="ButtonStyle2">
            <Setter Property="Control.Background" Value="Orange"/>
            <Setter Property="Control.FontSize" Value="25"/>
            <Setter Property="Control.FontFamily" Value="Microsoft Sans Serif"/>
            <Setter Property="Control.MinHeight" Value="70"/>
            <Setter Property="Control.Height" Value="auto"/>
            <Setter Property="Control.Foreground" Value="Beige"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <!--überschreibe das Standard ControlTemplate, um MouseOver Effekt nutzen zu können-->
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FF212121" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              TextOptions.TextRenderingMode="Grayscale"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter Property="Control.Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,4">
                                <GradientStop Offset="0.0" Color="#ff7600"/>
                                <GradientStop Offset="0.5"  Color="#ff7600"/>
                                <GradientStop Offset="1.0" Color="#ff7600"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Background" Value="#FFFF4B00"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Style für die Window Buttons (Minimize,Maximize,Close) -->
        <Style x:Key="WindowButton">
            <Setter Property="Control.MinHeight" Value="35"/>
        </Style>
        <!-- Style für den Zurück Button -->
        <Style x:Key="BackButton">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <!-- Überschreibe das Standard Template, um das Aussehen zu ändern -->
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="assets/icons/backButton.png"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="6" Direction="315" Color="Gray" Opacity="0.35" BlurRadius="10.5"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Image Source="assets/icons/backButton_active.png"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Style für die Ranking Liste -->
        
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="#FF01C8FF"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Beige" BorderThickness="0" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="2"/>
            <!--<Setter Property="Control.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#FF01C8FF" Offset="0.0"/>
                        <GradientStop Color="#FF648CFF" Offset="0.6"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <GradientStop Color="#FF01C8FF" Offset="0.0"/>
                                <GradientStop Color="#FF01C8FF" Offset="0.6"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="6" Direction="315" Color="Gray" Opacity="0.35" BlurRadius="10.5"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Ranglistenstyle für den ersten Platz-->
        <Style x:Key="RankingListStyle1" BasedOn="{StaticResource RankingListStyle}">
            <Setter Property="Control.Background" Value="Orange" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <GradientStop Color="#FFFF8B00" Offset="0.0"/>
                                <GradientStop Color="#FFFF8B00" Offset="0.6"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Ranglistenstyle für den zweiten Platz-->
        <Style x:Key="RankingListStyle2" BasedOn="{StaticResource RankingListStyle}">
            <Setter Property="Control.Background" Value="#FFFDB83B" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <GradientStop Color="#FFFF9F40" Offset="0.0"/>
                                <GradientStop Color="#FFFF9F40" Offset="0.6"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Ranglistenstyle für den dritten Platz-->
        <Style x:Key="RankingListStyle3" BasedOn="{StaticResource RankingListStyle}">
            <Setter Property="Control.Background" Value="#FFFDC560" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <GradientStop Color="#FFFDBD4A" Offset="0.0"/>
                                <GradientStop Color="#FFFDBD4A" Offset="0.6"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Style für ProgressBar -->
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="Orange"/>
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="BorderBrush" Value="#FFBCBCBC"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="12"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left" Background="Transparent">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="12" RadiusY="12"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="12" RadiusY="12">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
